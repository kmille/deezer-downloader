;;; template configuration for deezer-downlaoder
;;; you need to adjust: deezer.cookie_arl

[mpd]
; if you set this to True, the backend will connect to mpd (localhost:6600) and update
; the music database after a completed download
use_mpd = False
host = localhost
port = 6600
music_dir_root = /tmp/deezer-downloader

[download_dirs]
base = /tmp/deezer-downloader

songs = %(base)s/songs
albums = %(base)s/albums
zips = %(base)s/zips
playlists = %(base)s/playlists
youtubedl = %(base)s/youtube-dl

[debug]
; debug output used for /debug
command = journalctl -u deezer-downloader -n 100 --output cat

[http]
; web backend options
host = 127.0.0.1
port = 5000

; if used behind a proxy, specify base url prefix
; url_prefix = /deezer
url_prefix = 
api_root = %(url_prefix)s
static_root = %(url_prefix)s/static

[proxy]
; server:
;   - https://user:pass@host:port
;   - socks5://127.0.0.1:9050
;   - socks5h://127.0.0.1:9050 (DNS goes also over proxy)
server =

[threadpool]
; number of workers in thread pool, this specifies the maximum number of parallel downloads
workers = 4

[deezer]
; valid arl cookie value
; login manually using your web browser and take the arl cookie
cookie_arl = [a-f0-9]{192}
; mp3 or flac - flac needs premium subscription
quality = mp3

[youtubedl]
; you are responsible for keeping yt-dlp up-to-date (https://github.com/yt-dlp/yt-dlp)
; command = /home/kmille/projects/deezer-downloader/app/venv/bin/yt-dlp
command = /usr/bin/yt-dlp

[filename]
; n = Track number on 2 digit
; b = Album name
; a = Artist name
; t = Song title
; d = Disk number
song_name = "{n} - {t}"
album_name = "{a}/{b}"

; vim: syntax=dosini
